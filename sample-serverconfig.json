{
    "nostr": {
        "botnsec.comment": "The nsec for the primary bot running the service",
        "botnsec": "",
        "botProfile.comment": "The metadata for the bot running the service",
        "botProfile": {
            "name": "Jessica Botzzapp",
            "about": "This bot can be used to zap responses to events. Send a direct message to the bot to get started. (Coded by vicariousdrama@nodeyez.com)",
            "picture": "",
            "banner": "",
            "lud16": "wearydoor58@walletofsatoshi.com",
            "nip05": "jessica@nodeyez.com"
        },
        "relays.comment": "The list of relays that the primary bot uses",
        "relays": [
            {"url": "wss://nostr.pleb.network", "read": true, "write": true},
            {"url": "wss://nostr-pub.wellorder.net", "read": true, "write": true},
            {"url": "wss://nostr.mom", "read": true, "write": true},
            {"url": "wss://relay.nostr.bg", "read": true, "write": true},
            {"url": "wss://relay.damus.io", "read": true, "write": true},
            {"url": "wss://nos.lol", "read": true, "write": true},
            {"url": "wss://nostr.wine", "read": true, "write": false}
        ],
        "operatornpub.comment": "The npub of the operator to relay support messages to",
        "operatornpub": "",
        "defaultProfile.comment": "The default profile fields for newly created zapper identities",
        "defaultProfile": {
            "name": "Zapping Bot",
            "about": "This bot zaps responses to events",
            "picture": "",
            "banner": "",
            "lud16": "wearydoor58@walletofsatoshi.com",
            "nip05": ""
        },
        "fees.comment": "Fees the service should charge for types of processing, as measured in mcredits",
        "fees": {
            "replyMessage": 50,
            "zapEvent": 50,
            "time864": 1000
        },
        "excludeFromDirectMessages": [
            {"label": "Wino [Bot]", "npub": "npub1fyvwkve2gxm3h2d8fvwuvsnkell4jtj4zpae8w4w8zhn2g89t96s0tsfuk"}
        ]
    },
    "lnd": {
        "address.comment": "The IP address or FQDN to communicate with the LND server over REST",
        "address": "127.0.0.1",
        "port.comment": "The port the LND server is listening on for REST",
        "port": "10080",
        "macaroon.comment": "The macaroon for authentication and authorization for the LND server in hex format",
        "macaroon": "0201036C.....",
        "paymentTimeout.comment": "Time permitted in seconds to complete a payment or expire it",
        "paymentTimeout": 30,
        "feeLimit.comment": "Fee limit, in sats, allowed for each payment made",
        "feeLimit": 2,
        "connectTimeout.comment": "Time permitted in seconds to connect to LND",
        "connectTimeout": 5,
        "readTimeout.comment": "Time permitted in seconds to read all data from LND",
        "readTimeout": 30,
        "activeServer.comment": "Indicates the name of a nested LND server configuration to use. This permits quickly changing between configurations",
        "activeServer": null,
        "servers.comment": "An array of LND server configurations. Each is expected to have the same fields as described above",
        "servers": {
            "testing": {
                "address": "127.0.0.1",
                "port": "10080",
                "macaroon": "0201036C.....",
                "paymentTimeout": 30,
                "feeLimit": 2,
                "connectTimeout": 5,
                "readTimeout": 30
            },
            "mainnet": {
                "address": "127.0.0.2",
                "port": "10080",
                "macaroon": "0201036C.....",
                "paymentTimeout": 30,
                "feeLimit": 2,
                "connectTimeout": 5,
                "readTimeout": 30
            }
        }
    },
    "lnurl": {
        "connectTimeout.comment": "Time permitted in seconds to connect to LN URL Providers",
        "connectTimeout": 5,
        "readTimeout.comment": "Time permitted in seconds to read all data from LN URL Providers",
        "readTimeout": 30,
        "denyProviders.comment": "Domains for which zaps will not be paid",
        "denyProviders": [
            "zeuspay.com"
        ]
    }
}